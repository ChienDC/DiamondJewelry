// <auto-generated />
using System;
using DiamondJewelry.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiamondJewelry.Migrations
{
    [DbContext(typeof(JewelryDbContext))]
    partial class JewelryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiamondJewelry.Models.AdminLoginMst", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("AdminLogins");
                });

            modelBuilder.Entity("DiamondJewelry.Models.BrandMst", b =>
                {
                    b.Property<int>("Brand_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Brand_ID"));

                    b.Property<string>("Brand_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Brand_ID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("DiamondJewelry.Models.CartList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("MRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CartLists");
                });

            modelBuilder.Entity("DiamondJewelry.Models.CatMst", b =>
                {
                    b.Property<int>("Cat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cat_ID"));

                    b.Property<string>("Cat_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cat_ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DiamondJewelry.Models.CertifyMst", b =>
                {
                    b.Property<int>("Certify_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Certify_ID"));

                    b.Property<string>("Certify_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Certify_ID");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("DiamondJewelry.Models.DimInfoMst", b =>
                {
                    b.Property<int>("DimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DimID"));

                    b.Property<decimal>("DimCrt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DimImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DimPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DimSubType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DimType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DimID");

                    b.ToTable("DiamondInfos");
                });

            modelBuilder.Entity("DiamondJewelry.Models.DimMst", b =>
                {
                    b.Property<string>("Style_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DimQlty_ID")
                        .HasColumnType("int");

                    b.Property<int>("DimSubType_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Dim_Amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dim_Crt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dim_Gm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Dim_Pcs")
                        .HasColumnType("int");

                    b.Property<decimal>("Dim_Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dim_Size")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Style_Code", "DimQlty_ID", "DimSubType_ID");

                    b.HasIndex("DimQlty_ID");

                    b.HasIndex("DimSubType_ID");

                    b.ToTable("DiamondDetails");
                });

            modelBuilder.Entity("DiamondJewelry.Models.DimQltyMst", b =>
                {
                    b.Property<int>("DimQlty_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DimQlty_ID"));

                    b.Property<string>("DimQlty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DimQlty_ID");

                    b.ToTable("DiamondQualities");
                });

            modelBuilder.Entity("DiamondJewelry.Models.DimQltySubMst", b =>
                {
                    b.Property<int>("DimSubType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DimSubType_ID"));

                    b.Property<string>("DimQlty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DimSubType_ID");

                    b.ToTable("DiamondSubQualities");
                });

            modelBuilder.Entity("DiamondJewelry.Models.GoldKrtMst", b =>
                {
                    b.Property<int>("GoldType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoldType_ID"));

                    b.Property<string>("Gold_Crt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GoldType_ID");

                    b.ToTable("GoldCarats");
                });

            modelBuilder.Entity("DiamondJewelry.Models.Inquiry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("DiamondJewelry.Models.ItemMst", b =>
                {
                    b.Property<string>("Style_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Brand_ID")
                        .HasColumnType("int");

                    b.Property<int>("Cat_ID")
                        .HasColumnType("int");

                    b.Property<int>("Certify_ID")
                        .HasColumnType("int");

                    b.Property<int>("GoldType_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Gold_Wt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Net_Gold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Pairs")
                        .HasColumnType("int");

                    b.Property<int>("Prod_ID")
                        .HasColumnType("int");

                    b.Property<string>("Prod_Quality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Stone_Wt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tot_Gross_Wt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Style_Code");

                    b.HasIndex("Brand_ID");

                    b.HasIndex("Cat_ID");

                    b.HasIndex("Certify_ID");

                    b.HasIndex("GoldType_ID");

                    b.HasIndex("Prod_ID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DiamondJewelry.Models.JewelTypeMst", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Jewellery_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("JewelTypes");
                });

            modelBuilder.Entity("DiamondJewelry.Models.ProdMst", b =>
                {
                    b.Property<int>("Prod_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prod_ID"));

                    b.Property<string>("Prod_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Prod_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DiamondJewelry.Models.StoneMst", b =>
                {
                    b.Property<string>("Style_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StoneQlty_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Stone_Amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stone_Crt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stone_Gm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stone_Pcs")
                        .HasColumnType("int");

                    b.Property<decimal>("Stone_Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Style_Code", "StoneQlty_ID");

                    b.HasIndex("StoneQlty_ID");

                    b.ToTable("Stones");
                });

            modelBuilder.Entity("DiamondJewelry.Models.StoneQltyMst", b =>
                {
                    b.Property<int>("StoneQlty_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoneQlty_ID"));

                    b.Property<string>("StoneQlty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoneQlty_ID");

                    b.ToTable("StoneQualities");
                });

            modelBuilder.Entity("DiamondJewelry.Models.UserRegMst", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiamondJewelry.Models.DimMst", b =>
                {
                    b.HasOne("DiamondJewelry.Models.DimQltyMst", null)
                        .WithMany()
                        .HasForeignKey("DimQlty_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.DimQltySubMst", null)
                        .WithMany()
                        .HasForeignKey("DimSubType_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.ItemMst", null)
                        .WithMany()
                        .HasForeignKey("Style_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondJewelry.Models.ItemMst", b =>
                {
                    b.HasOne("DiamondJewelry.Models.BrandMst", null)
                        .WithMany()
                        .HasForeignKey("Brand_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.CatMst", null)
                        .WithMany()
                        .HasForeignKey("Cat_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.CertifyMst", null)
                        .WithMany()
                        .HasForeignKey("Certify_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.GoldKrtMst", null)
                        .WithMany()
                        .HasForeignKey("GoldType_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.ProdMst", null)
                        .WithMany()
                        .HasForeignKey("Prod_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondJewelry.Models.StoneMst", b =>
                {
                    b.HasOne("DiamondJewelry.Models.StoneQltyMst", null)
                        .WithMany()
                        .HasForeignKey("StoneQlty_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondJewelry.Models.ItemMst", null)
                        .WithMany()
                        .HasForeignKey("Style_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
